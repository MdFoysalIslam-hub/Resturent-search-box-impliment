{"version":3,"sources":["components/Card/Cart.js","components/MealFInd/MealFind.js","App.js","reportWebVitals.js","index.js"],"names":["Cart","props","food","idMeal","strMeal","strCategory","strArea","strMealThumb","strIngredient5","console","log","CardGroup","Card","Img","variant","src","Body","Title","Text","Button","Footer","className","MealFind","useState","items","setItems","search","setSearch","useEffect","url","fetch","then","res","json","data","meals","style","color","icon","faCoffee","type","onChange","event","target","value","placeholder","length","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.716d3d82.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { Button, CardGroup } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Cart = (props) => {\r\n    const  {idMeal, strMeal, strArea, strCategory, strIngredient5, strMealThumb} = props.food;\r\n    console.log(props.food);\r\n    return (\r\n        \r\n           <CardGroup>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={strMealThumb} />\r\n    <Card.Body>\r\n      <Card.Title>  {strMeal}</Card.Title>\r\n      <Card.Text>\r\n        {strCategory}\r\n      </Card.Text>\r\n      <p>Price: ${idMeal}</p>\r\n    </Card.Body><Button variant=\"success\">Order Now</Button>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer><br/>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={strMealThumb} />\r\n    <Card.Body>\r\n      <Card.Title>{strMeal}</Card.Title>\r\n      <Card.Text>\r\n      {strCategory}\r\n        content.{' '}\r\n      </Card.Text> <p>Price: ${idMeal}</p>\r\n    </Card.Body><Button variant=\"success\">Order Now</Button>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer><br/>\r\n  </Card>\r\n  <Card>\r\n    <Card.Img variant=\"top\" src={strMealThumb} />\r\n    <Card.Body>\r\n      <Card.Title>{strMeal}</Card.Title>\r\n      <Card.Text>\r\n      {strCategory}\r\n      </Card.Text> <p>Price: ${idMeal}</p>\r\n    </Card.Body><Button variant=\"success\">Order Now</Button>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    </Card.Footer><br/>\r\n  </Card>\r\n</CardGroup>\r\n        \r\n    );\r\n};\r\n\r\nexport default Cart;","import React, { useEffect, useState } from 'react';\r\nimport './MealFind.css';\r\nimport Cart from './../Card/Cart';\r\nimport '../../App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee, fasFaGrinTongue } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst MealFind = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [search, setSearch] = useState('')\r\n    const handleChange = event => {\r\n        console.log(event.target.value)\r\n        setSearch(event.target.value);\r\n    }\r\n    useEffect(()=>{\r\n        const url = `https://www.themealdb.com/api/json/v1/1/search.php?s=${search}`;\r\n            fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => setItems(data.meals))\r\n\r\n    },[search])\r\n    return (\r\n        <div className=\"App\">\r\n            <h3 style={{color: \"blue\"}}>Wellcome Our VIP Resturent</h3>\r\n            <h3  style={{color: \"deep pink\"}}>\r\n            Search Your Food Item <FontAwesomeIcon icon={faCoffee} /> <br/>\r\n            <input type=\"text\" onChange={handleChange} placeholder=\"Search Food\"/></h3>\r\n            <h5>Search: {search}</h5>\r\n            <h5>Search Result :{items?.length}</h5>\r\n            <h5>meal found : </h5>\r\n           <div>{\r\n               items?.map(food =><Cart food={food}></Cart>)\r\n           }</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MealFind;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cart from './components/Card/Cart';\nimport MealFind from './components/MealFInd/MealFind';\n\n\nfunction App() {\n \n  return (\n    \n   <div>\n   <MealFind/>\n   \n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}